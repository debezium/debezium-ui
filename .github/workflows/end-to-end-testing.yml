name: End-to-End Tests

on:
  push:
    branches:
      - main
    paths:
      - "pom.xml"
      - "Dockerfile"
      - "backend/**"
      - "ui/**"
      - ".github/workflows/end-to-end-testing.yml"
  pull_request:
    branches:
      - main
    paths:
      - "pom.xml"
      - "Dockerfile"
      - "backend/**"
      - "ui/**"
      - ".github/workflows/end-to-end-testing.yml"

jobs:
  e2e-test:
    runs-on: ubuntu-latest

    services:
      dbzui-zookeeper:
        image: quay.io/debezium/zookeeper:2.3

      dbzui-kafka:
        image: quay.io/debezium/kafka:2.3
        ports:
          - 9092:9092
        env:
          ZOOKEEPER_CONNECT: dbzui-zookeeper:2181

      dbzui-postgres:
        image: quay.io/debezium/example-postgres:2.3
        ports:
          - 65432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

      dbzui-connect:
        image: quay.io/debezium/connect:nightly
        ports:
          - 8083:8083
        env:
          ENABLE_DEBEZIUM_SCRIPTING: true
          CONNECT_REST_EXTENSION_CLASSES: io.debezium.kcrestextension.DebeziumConnectRestExtension
          BOOTSTRAP_SERVERS: dbzui-kafka:9092
          GROUP_ID: 1
          CONFIG_STORAGE_TOPIC: my_connect_configs
          OFFSET_STORAGE_TOPIC: my_connect_offsets
          STATUS_STORAGE_TOPIC: my_connect_statuses

    steps:
      - name: Checkout Debezium UI
        uses: actions/checkout@v3
      - name: Build Debezium UI container
        run: DOCKER_BUILDKIT=1 docker build --cache-from debezium/debezium-ui --file ./Dockerfile --tag dbzui-backend:${GITHUB_SHA} .
      - name: Run Debezium UI container
        run: docker run --rm --name dbzui-container -d -p 8080:8080 --network=$(docker network ls -f name=^github_network_ --format "{{.Name}}") -e KAFKA_CONNECT_URIS=http://dbzui-connect:8083 dbzui-backend:${GITHUB_SHA}
      - name: Install deps and build (with cache)
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false
          install-command: npm install
          working-directory: ./ui
      - name: End-to-End Test Debezium UI
        uses: cypress-io/github-action@v2
        with:
          # we have already installed everything
          install: false
          working-directory: ./ui
      - name: upload Cypress screenshots for failed tests
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: ui/cypress/screenshots

      # Test run video was always captured, so this action uses "always()" condition
      - name: upload Cypress test run video
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: ui/cypress/videos
      - name: Stop Debezium UI container
        run: docker rm -f dbzui-container
