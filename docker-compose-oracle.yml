## Development infrastructure for running and testing the Debezium UI
version: '3'
services:
  dbzui-zookeeper:
    container_name: dbzui-zookeeper
    image: quay.io/debezium/zookeeper:latest
    networks:
      - dbzui-network
  dbzui-kafka:
    container_name: dbzui-kafka
    image: quay.io/debezium/kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - dbzui-zookeeper
    environment:
      - ZOOKEEPER_CONNECT=dbzui-zookeeper:2181
    networks:
      - dbzui-network
  dbzui-db-pg:
    container_name: dbzui-db-pg
    image: quay.io/debezium/example-postgres:latest
    ports:
      - "65432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - dbzui-network
  dbzui-db-mysql:
    container_name: dbzui-db-mysql
    image: quay.io/debezium/example-mysql:latest
    ports:
      - "63306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=debezium
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysql
    networks:
      - dbzui-network
  dbzui-db-mongo:
    container_name: dbzui-db-mongo
    image: mongo:5.0
    command: ["mongod", "--replSet", "rs0"]
    ports:
      - "37017:27017"
    networks:
      - dbzui-network
  mongo-initializer:
    image: mongo:5.0
    networks:
      - dbzui-network
    depends_on:
      - dbzui-db-mongo
    command:
      - bash
      - -c
      - |
        sleep 20 && mongosh --host dbzui-db-mongo --port 27017 --eval "rs.initiate();" &&
        mongosh --host dbzui-db-mongo --port 27017 /docker-entrypoint-initdb.d/initialize-mongo-single.js
    volumes:
      - ./backend/src/test/resources/initialize-mongo-single.js:/docker-entrypoint-initdb.d/initialize-mongo-single.js
  dbzui-db-oracle:
    container_name: dbzui-db-oracle
    build:
      context: oracle
    ports:
      - "1521:1521"
    networks:
      - dbzui-network
  dbzui-db-sqlserver:
    container_name: dbzui-db-sqlserver
    build:
      context: sqlserver
    ports:
     - 1433:1433
    networks:
      - dbzui-network
    environment:
     - ACCEPT_EULA=Y
     - MSSQL_PID=Standard
     - SA_PASSWORD=Password!
     - MSSQL_AGENT_ENABLED=true
  sqlserver-initializer:
    image: debezium-ui_dbzui-db-sqlserver
    networks:
      - dbzui-network
    depends_on:
      - dbzui-db-sqlserver
    command: bash -c 'sleep 60 && /opt/mssql-tools/bin/sqlcmd -S dbzui-db-sqlserver -U sa -P Password! -i inventory.sql'
  dbzui-connect:
    container_name: dbzui-connect
    build:
      context: connect-oracle-jdbc
    ports:
      - "8083:8083"
    depends_on:
      - dbzui-kafka
      - dbzui-db-pg
      - dbzui-db-oracle
    environment:
      - BOOTSTRAP_SERVERS=dbzui-kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
      - ENABLE_DEBEZIUM_SCRIPTING=true
      - CONNECT_REST_EXTENSION_CLASSES=io.debezium.kcrestextension.DebeziumConnectRestExtension
    networks:
      - dbzui-network
  dbzui-backend:
    container_name: dbzui-backend
    build:
      context: .
      dockerfile: Dockerfile.oracle
    ports:
      - "8080:8080"
    environment:
      KAFKA_CONNECT_URIS: http://dbzui-connect:8083
    depends_on:
      - dbzui-connect
    networks:
      - dbzui-network
networks:
  dbzui-network:
    external: false
